(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ag-highlight-search t)
 '(ange-ftp-try-passive-mode t)
 '(ansi-color-faces-vector [default bold shadow italic underline bold bold-italic bold])
 '(ansi-color-names-vector (vector "#c5c8c6" "#cc6666" "#b5bd68" "#f0c674" "#81a2be" "#b294bb" "#8abeb7" "#1d1f21"))
 '(auto-insert-mode t nil (autoinsert))
 '(browse-url-browser-function (quote browse-url-generic))
 '(browse-url-generic-program "sensible-browser")
 '(comint-input-autoexpand t)
 '(company-backends (quote ((php-extras-company company-dabbrev-code company-gtags company-keywords) company-elisp company-bbdb company-nxml company-css company-eclim company-semantic company-clang company-xcode company-ropemacs company-cmake company-capf (company-dabbrev-code company-gtags company-etags company-keywords) company-oddmuse company-files company-dabbrev)))
 '(company-transformers (quote (company-sort-by-occurrence)))
 '(css-indent-offset 2)
 '(custom-safe-themes (quote ("628278136f88aa1a151bb2d6c8a86bf2b7631fbea5f0f76cba2a0079cd910f7d" "06f0b439b62164c6f8f84fdda32b62fb50b6d00e8b01c2208e55543a6337433a" default)))
 '(delete-selection-mode t nil (delsel))
 '(desktop-files-not-to-save "^/none[^/:]*:")
 '(desktop-restore-eager 3)
 '(desktop-save (quote ask-if-new))
 '(desktop-save-mode nil)
 '(drupal/emacs-drush-update-tags-after-save t)
 '(drupal/phpcs-standard "ArneDrupal")
 '(ediff-keep-variants nil)
 '(ediff-split-window-function (quote split-window-horizontally))
 '(ediff-use-last-dir t)
 '(fci-rule-color "#282a2e")
 '(flycheck-disabled-checkers (quote (javascript-jshint)))
 '(flycheck-eslintrc nil)
 '(flycheck-phpmd-rulesets (quote ("codesize" "design" "naming")))
 '(flycheck-scss-compass t)
 '(flymake-cursor-error-display-delay 0.3)
 '(flymake-cursor-number-of-errors-to-display 1)
 '(flyspell-default-dictionary nil)
 '(global-company-mode t)
 '(helm-browse-code-regexp-alist (quote ((lisp-interaction-mode . "^ *(def\\(un\\|subst\\|macro\\|face\\|alias\\|advice\\|struct\\|type\\|theme\\|var\\|group\\|custom\\|const\\|method\\|class\\)") (emacs-lisp-mode . "^ *(def\\(un\\|subst\\|macro\\|face\\|alias\\|advice\\|struct\\|type\\|theme\\|var\\|group\\|custom\\|const\\|method\\|class\\)") (lisp-mode . "^ *(def\\(un\\|subst\\|macro\\|face\\|alias\\|advice\\|struct\\|type\\|theme\\|var\\|group\\|custom\\|const\\|method\\|class\\)") (python-mode . "\\<def\\>\\|\\<class\\>") (php-mode . "^ *\\(\\(abstract +\\)*\\<class\\>\\|\\<interface\\>\\|\\(\\(public\\|protected\\|private\\|static\\) +\\)*\\<function\\>\\)"))))
 '(helm-buffer-max-length 40)
 '(helm-ff-transformer-show-only-basename t)
 '(helm-for-files-preferred-list (quote (helm-c-source-buffers-list helm-c-source-files-in-current-dir helm-c-source-recentf helm-c-source-bookmarks helm-c-source-file-cache helm-c-source-locate)))
 '(helm-idle-delay 0.1)
 '(helm-input-idle-delay 0.1)
 '(highlight-symbol-idle-delay 0.5)
 '(hscroll-margin 15)
 '(ido-everywhere t)
 '(ido-mode (quote both) nil (ido))
 '(indent-tabs-mode nil)
 '(inhibit-startup-screen t)
 '(js-indent-level 2)
 '(keyfreq-autosave-mode t)
 '(keyfreq-file "~/.emacs.d/keyfreq")
 '(keyfreq-file-lock "~/.emacs.d/keyfreq.lock")
 '(keyfreq-mode t)
 '(magit-default-tracking-name-function (quote xen-magit-default-tracking-name))
 '(magit-status-buffer-switch-function (quote switch-to-buffer))
 '(menu-bar-mode nil)
 '(mouse-avoidance-mode (quote animate) nil (avoid))
 '(mouse-sel-default-bindings t)
 '(mouse-sel-mode t)
 '(mouse-wheel-scroll-amount (quote (1 ((shift) . 5) ((control)))))
 '(mouse-yank-at-point t)
 '(mutt-file-pattern "mutt-[a-z]+-[0-9]+-[0-9]+-[0-9]+")
 '(org-agenda-files (quote ("~/Documents/Todo.org")))
 '(org-support-shift-select t)
 '(origami-parser-alist (quote ((java-mode . origami-c-style-parser) (c-mode . origami-c-style-parser) (php-mode . origami-c-style-parser) (c++-mode . origami-c-style-parser) (cperl-mode . origami-c-style-parser) (emacs-lisp-mode . origami-elisp-parser) (lisp-interaction-mode . origami-elisp-parser) (clojure-mode . origami-clj-parser))))
 '(password-cache-expiry 3600)
 '(php-extras-auto-complete-insert-parenthesis nil)
 '(php-file-patterns (quote ("\\.php[s34]?\\'" "\\.phtml\\'" "\\.inc\\'" "\\.module\\'")))
 '(projectile-global-mode t)
 '(projectile-switch-project-action (quote xen-projectile-magit))
 '(query-replace-highlight t)
 '(recentf-max-saved-items 500)
 '(safe-local-variable-values (quote ((drupal-search-url . "http://test.api-dr-dk.drupal7.dev.peytz.dk/api/search/%v/%s"))))
 '(save-place t nil (saveplace))
 '(scroll-bar-mode nil)
 '(scss-compile-at-save nil)
 '(sentence-end-double-space nil)
 '(server-temp-file-regexp "^\\(/tmp/Re\\|/draft\\)\\|/tmp/\\(rat\\.\\|mutt-\\).*$")
 '(set-mark-command-repeat-pop t)
 '(sp-autodelete-closing-pair nil)
 '(sp-autodelete-opening-pair nil)
 '(sp-autodelete-pair nil)
 '(sp-autoskip-closing-pair (quote always))
 '(speedbar-fetch-etags-command "etags")
 '(speedbar-hide-button-brackets-flag nil)
 '(speedbar-ignored-modes nil)
 '(speedbar-show-unknown-files t)
 '(speedbar-supported-extension-expressions (quote ("\\.\\(inc\\|php[s34]?\\)" ".[ch]\\(\\+\\+\\|pp\\|c\\|h\\|xx\\)?" ".tex\\(i\\(nfo\\)?\\)?" ".el" ".emacs" ".l" ".lsp" ".p" ".java" ".f\\(90\\|77\\|or\\)?" ".ada" ".pl" ".tcl" ".m" ".scm" ".pm" ".py" ".s?html" "Makefile\\(\\.in\\)?" ".p\\(hp\\(3\\|4\\)\\|html\\|hp\\)" ".module" ".install")))
 '(speedbar-track-mouse-flag t)
 '(speedbar-update-flag (quote x))
 '(tex-command nil t)
 '(tex-dvi-view-command "dvilx")
 '(tool-bar-mode nil nil (tool-bar))
 '(uniquify-after-kill-buffer-p t)
 '(uniquify-ask-about-buffer-names-p t)
 '(uniquify-buffer-name-style (quote post-forward-angle-brackets) nil (uniquify))
 '(uniquify-trailing-separator-p t)
 '(url-cookie-confirmation (quote nil))
 '(url-honor-refresh-requests (quote t))
 '(url-privacy-level (quote (email)))
 '(use-package-verbose t)
 '(w3-default-homepage (quote "http://hades/~beast"))
 '(w3-default-stylesheet (quote nil))
 '(w3-delay-image-loads (quote t))
 '(w3-honor-stylesheets (quote t))
 '(w3-image-mappings (quote (("image/x-xbitmap" . xbm) ("image/xbitmap" . xbm) ("image/xbm" . xbm) ("image/jpeg" . jpeg) ("image/gif" . gif) ("image/png" . png) ("image/x-fax" . g3fax) ("image/x-raster" . rast) ("image/windowdump" . xwd) ("image/x-icon" . icon) ("image/portable-graymap" . pgm) ("image/portable-pixmap" . ppm) ("image/x-pixmap" . xpm) ("image/x-xpixmap" . xpm) ("image/pict" . pict) ("image/x-rgb" . sgi) ("image/x-sgi" . sgi) ("image/x-macpaint" . macpt) ("image/x-targa" . tga) ("image/tiff" . tiff))))
 '(w3-load-hook (quote nil))
 '(w3-mode-hook (quote nil))
 '(w3-netscape-compatible-comments (quote t))
 '(w3-preferences-cancel-hook (quote nil) t)
 '(w3-preferences-default-hook (quote nil) t)
 '(w3-preferences-ok-hook (quote nil) t)
 '(w3-preferences-setup-hook (quote nil) t)
 '(w3-source-file-hook (quote nil))
 '(w3-toolbar-orientation (quote default) t)
 '(w3-toolbar-type (quote both) t)
 '(w3-use-menus (quote (file edit view go bookmark options buffers style emacs nil help)))
 '(w3-user-colors-take-precedence (quote nil))
 '(whole-line-or-region-mode t)
 '(yas-fallback-behavior (quote call-other-command))
 '(yas-triggers-in-field t)
 '(yas-wrap-around-region nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "black" :foreground "white" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 113 :width normal :foundry "unknown" :family "Anonymous Pro"))))
 '(column-enforce-face ((t (:background "#524500"))))
 '(cursor ((t (:background "turquoise"))))
 '(flycheck-error ((t (:background "Red4" :underline (:color "Red1" :style wave)))))
 '(flycheck-fringe-warning ((t (:inherit warning))))
 '(flycheck-warning ((t (:background "DarkOrange4" :underline (:color "DarkOrange" :style wave)))))
 '(flymake-errline ((t (:background "#4b0000"))))
 '(flymake-warnline ((t (:background "#4b1500"))))
 '(hl-line ((t (:background "#222"))))
 '(magit-diff-add ((t (:foreground "light green"))))
 '(magit-diff-del ((t (:foreground "tomato"))))
 '(magit-item-highlight ((t (:background "#111"))))
 '(mode-line ((t (:background "OliveDrab3" :foreground "black"))))
 '(powerline-active1 ((t (:inherit mode-line :background "grey22" :foreground "white" :box nil))))
 '(powerline-active2 ((t (:inherit mode-line :background "grey40" :foreground "white" :box nil))))
 '(powerline-inactive1 ((t (:inherit mode-line-inactive :background "grey11" :box nil))))
 '(powerline-inactive2 ((t (:inherit mode-line-inactive :background "grey20" :box nil))))
 '(region ((t (:background "#456"))))
 '(secondary-selection ((((class color) (min-colors 88) (background dark)) (:background "Blue3"))))
 '(term-color-blue ((t (:background "#729fcf" :foreground "#729fcf"))))
 '(term-color-cyan ((t (:background "#34e2e2" :foreground "#34e2e2"))))
 '(term-color-green ((t (:background "#8ae234" :foreground "#8ae234"))))
 '(term-color-magenta ((t (:background "#ad7fa8" :foreground "#ad7fa8"))))
 '(term-color-red ((t (:background "#ef2929" :foreground "#ef2929"))))
 '(term-color-white ((t (:background "#eeeeec" :foreground "#eeeeec"))))
 '(term-color-yellow ((t (:background "#fce94f" :foreground "#fce94f")))))
(put 'narrow-to-region 'disabled nil)
